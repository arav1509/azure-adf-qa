{
	"name": "emp_scd2_V4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp_src",
						"type": "DatasetReference"
					},
					"name": "sourceTable"
				},
				{
					"dataset": {
						"referenceName": "emp_trg",
						"type": "DatasetReference"
					},
					"name": "TrgTable"
				},
				{
					"dataset": {
						"referenceName": "emp_trg",
						"type": "DatasetReference"
					},
					"name": "GetMaxSurrogateKey"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "emp_trg",
						"type": "DatasetReference"
					},
					"name": "InsertNewRecordsSink"
				},
				{
					"dataset": {
						"referenceName": "emp_trg",
						"type": "DatasetReference"
					},
					"name": "InsertedUpdatedRecordsSink"
				},
				{
					"dataset": {
						"referenceName": "emp_trg",
						"type": "DatasetReference"
					},
					"name": "DeActivateOldRecords"
				},
				{
					"dataset": {
						"referenceName": "emp_trg",
						"type": "DatasetReference"
					},
					"name": "UpdateNonKeyColumnsSink"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "SelectTrgColumns"
				},
				{
					"name": "SelectSrcColumns"
				},
				{
					"name": "Join1"
				},
				{
					"name": "NewRecordsFilter"
				},
				{
					"name": "NewRecordSort"
				},
				{
					"name": "OldSort"
				},
				{
					"name": "insertSort1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "UpdateSort1"
				},
				{
					"name": "UpdateActiveFlag"
				},
				{
					"name": "ETLUpdatedDate"
				},
				{
					"name": "AlterRow2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "UpdateSelect"
				},
				{
					"name": "InsertSelect"
				},
				{
					"name": "UpdateETLTime"
				},
				{
					"name": "SCDInsertUpdatedRecords"
				},
				{
					"name": "InsertSourceUpdatedRecords"
				},
				{
					"name": "InsertNewRecords"
				},
				{
					"name": "MaxSurrogateKey"
				},
				{
					"name": "SurrogateKeyJoin"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "SelectNewInsertedRecords1",
					"description": "Selectin only Source column names, Because new records will come from Source table"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "SelectSCDColumns"
				},
				{
					"name": "SelectSCDColumns2"
				},
				{
					"name": "SelectSCDColumns3"
				},
				{
					"name": "Select2"
				}
			],
			"script": "parameters{\n\tupdate_key_columns as string ('ename,dept,mgr,sal,comm'),\n\tinsert_Key_column as string ('job,hiredate'),\n\tKey_Column as string ('empno'),\n\ttarget_tab_surrogate_col_name as string ('emp_trg_key'),\n\ttarget_table_last_updated_date_name as string ('etl_last_updated_date'),\n\tRecord_start_date as string ('start_date'),\n\tRecord_End_date as string ('end_date'),\n\tRecord_active_flag as string ('active_flag')\n}\nsource(output(\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceTable\nsource(output(\n\t\temp_trg_key as integer,\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer,\n\t\tetl_last_updated_date as date,\n\t\tactive_flag as string,\n\t\tstart_date as date,\n\t\tend_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TrgTable\nsource(output(\n\t\temp_trg_key as integer,\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer,\n\t\tetl_last_updated_date as date,\n\t\tactive_flag as string,\n\t\tstart_date as date,\n\t\tend_date as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> GetMaxSurrogateKey\nSurrogateKey1 derive(Update_hash_Key = md5(byNames(split($update_key_columns,','), 'sourceTable')),\n\t\tInsert_hash_key = md5(byNames(split($insert_Key_column,','), 'sourceTable')),\n\t\tTable_hash_Key_column = md5(byNames(split($Key_Column,','), 'sourceTable')),\n\t\tsurrogate_key_value = toLong(byName('Max_Surrogate_Key','SurrogateKey1'))+Key,\n\t\tlocal1 := 'Max_Surrogate_Key') ~> DerivedColumn1\nFilter1 derive(Update_hash_Key = md5(byNames(split($update_key_columns,','), 'TrgTable')),\n\t\tInsert_hash_key = md5(byNames(split($insert_Key_column,','), 'TrgTable')),\n\t\tKey_hash_column = md5(byNames(split($Key_Column,','), 'TrgTable'))) ~> DerivedColumn2\nDerivedColumn2 select(mapColumn(\n\t\teach(match(true()),\n\t\t\t'trg_'+$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTrgColumns\nDerivedColumn1 select(mapColumn(\n\t\teach(match(name!='Key'&&name!='surrogate_key_value'&&name!='Max_Surrogate_Key'),\n\t\t\t'src_'+$$ = $$),\n\t\teach(match(name=='surrogate_key_value'),\n\t\t\t'src_'+trim($$,'surrogate_key_value')+$target_tab_surrogate_col_name = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSrcColumns\nSelectSrcColumns, SelectTrgColumns join(src_Table_hash_Key_column == trg_Key_hash_column,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nJoin1 split(isNull(trg_Insert_hash_key),\n\tnot(isNull(trg_Insert_hash_key)),\n\tdisjoint: true) ~> NewRecordsFilter@(NewRecords, OldRecords)\nNewRecordsFilter@NewRecords sort(asc(byPosition(1), true)) ~> NewRecordSort\nNewRecordsFilter@OldRecords sort(asc(byPosition(1), true)) ~> OldSort\nConditionalSplit1@InserRecords sort(asc(byPosition(1), true)) ~> insertSort1\nOldSort split(src_Insert_hash_key!=trg_Insert_hash_key,\n\tsrc_Update_hash_Key!=trg_Update_hash_Key,\n\tdisjoint: false) ~> ConditionalSplit1@(InserRecords, UpdateRecords)\nConditionalSplit1@UpdateRecords sort(asc(byPosition(1), true)) ~> UpdateSort1\nSelectSCDColumns3 alterRow(updateIf(true())) ~> UpdateActiveFlag\nUpdateSort1 derive(src_etl_last_updated_date = currentUTC()) ~> ETLUpdatedDate\nSelect1 alterRow(updateIf(true())) ~> AlterRow2\nETLUpdatedDate select(mapColumn(\n\t\teach(match(name==concat('trg_',$target_tab_surrogate_col_name)),\n\t\t\tsubstring($$,5) = $$),\n\t\teach(match(name=='src_'+$target_table_last_updated_date_name),\n\t\t\tsubstring($$,5) = $$),\n\t\teach(match((locate(trim('src_'),name)!=0)&&(name!='src_Max_Surrogate_Key'&&name!='src_Table_hash_Key_column'&&name!='src_Update_hash_Key'&&name!='src_Insert_hash_key'&&name!='src_Table_Key_column'&&name!=$target_tab_surrogate_col_name&&name!='src_etl_last_updated_date')),\n\t\t\tsubstring($$,5) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nTrgTable filter(byName($Record_active_flag, 'TrgTable') == '1') ~> Filter1\nUpdateETLTime select(mapColumn(\n\t\teach(match(name=='trg_'+$target_tab_surrogate_col_name)),\n\t\teach(match(name=='etl_last_updated_date'),\n\t\t\tconcat('trg_',trim($$,'etl_last_updated_date'),$target_table_last_updated_date_name) = $$),\n\t\teach(match(name=='active_flag'),\n\t\t\tconcat('trg_',trim($$,'active_flag'),$Record_active_flag) = $$),\n\t\teach(match(name=='end_date'),\n\t\t\tconcat('trg_',trim($$,'end_date'),$Record_End_date) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UpdateSelect\nSelectSCDColumns2 select(mapColumn(\n\t\teach(match(locate(trim('src_'),name)!=0),\n\t\t\tsubstring($$,5) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsertSelect\ninsertSort1 derive(etl_last_updated_date = currentUTC(),\n\t\tend_date = currentUTC(),\n\t\tactive_flag = 0) ~> UpdateETLTime\ninsertSort1 derive(src_end_date = toDate('31-DEC-3000','dd-MMM-yyyy'),\n\t\tsrc_active_flag = 1,\n\t\tsrc_etl_last_updated_date = currentUTC(),\n\t\tsrc_start_date = currentUTC()) ~> SCDInsertUpdatedRecords\nInsertSelect alterRow(insertIf(true())) ~> InsertSourceUpdatedRecords\nSelectNewInsertedRecords1 alterRow(insertIf(true())) ~> InsertNewRecords\nSelect2 aggregate(each(match(name=='surrogate_key'), 'Max_Surrogate_Key' = coalesce(max($$),0))) ~> MaxSurrogateKey\nsourceTable, MaxSurrogateKey join(1==1,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> SurrogateKeyJoin\nSurrogateKeyJoin keyGenerate(output(Key as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSelectSCDColumns select(mapColumn(\n\t\teach(match(locate(trim('src_'),name)!=0),\n\t\t\tsubstring($$,5) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNewInsertedRecords1\nNewRecordSort derive(src_start_date = currentUTC(),\n\t\tsrc_end_date = toDate('31-DEC-3000','dd-MMM-yyyy'),\n\t\tsrc_active_flag = 1,\n\t\tsrc_etl_last_updated_date = currentUTC()) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\teach(match(name!='src_start_date'&&name!='src_end_date'&&name!='src_active_flag'&&name!='src_etl_last_updated_date')),\n\t\teach(match(name=='src_start_date'),\n\t\t\tconcat('src_',trim($$,'src_end_date'),$Record_start_date) = $$),\n\t\teach(match(name=='src_end_date'),\n\t\t\tconcat('src_',trim($$,'src_end_date'),$Record_End_date) = $$),\n\t\teach(match(name=='src_active_flag'),\n\t\t\tconcat('src_',trim($$,'src_active_flag'),$Record_active_flag) = $$),\n\t\teach(match(name=='src_etl_last_updated_date'),\n\t\t\tconcat('src_',trim($$,'src_etl_last_updated_date'),$target_table_last_updated_date_name) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSCDColumns\nSCDInsertUpdatedRecords select(mapColumn(\n\t\teach(match(name!='src_start_date'&&name!='src_end_date'&&name!='src_active_flag'&&name!='src_etl_last_updated_date')),\n\t\teach(match(name=='src_start_date'),\n\t\t\tconcat('src_',trim($$,'src_start_date'),$Record_start_date) = $$),\n\t\teach(match(name=='src_end_date'),\n\t\t\tconcat('src_',trim($$,'src_end_date'),$Record_End_date) = $$),\n\t\teach(match(name=='src_active_flag'),\n\t\t\tconcat('src_',trim($$,'src_active_flag'),$Record_active_flag) = $$),\n\t\teach(match(name=='src_etl_last_updated_date'),\n\t\t\tconcat('src_',trim($$,'src_etl_last_updated_date'),$target_table_last_updated_date_name) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSCDColumns2\nUpdateSelect select(mapColumn(\n\t\teach(match(true()),\n\t\t\tsubstring($$,5) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSCDColumns3\nGetMaxSurrogateKey select(mapColumn(\n\t\teach(match(name==$target_tab_surrogate_col_name),\n\t\t\tconcat(trim($$,$target_tab_surrogate_col_name),'surrogate_key') = $$),\n\t\teach(match(true()&&name!=$target_tab_surrogate_col_name))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nInsertNewRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\temp_trg_key as integer,\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer,\n\t\tetl_last_updated_date as date,\n\t\tactive_flag as string,\n\t\tstart_date as date,\n\t\tend_date as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 4,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\teach(match(true()))\n\t)) ~> InsertNewRecordsSink\nInsertSourceUpdatedRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\temp_trg_key as integer,\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer,\n\t\tetl_last_updated_date as date,\n\t\tactive_flag as string,\n\t\tstart_date as date,\n\t\tend_date as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\teach(match(true()))\n\t)) ~> InsertedUpdatedRecordsSink\nUpdateActiveFlag sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\temp_trg_key as integer,\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer,\n\t\tetl_last_updated_date as date,\n\t\tactive_flag as string,\n\t\tstart_date as date,\n\t\tend_date as date\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:(array($target_tab_surrogate_col_name)),\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError') ~> DeActivateOldRecords\nAlterRow2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\temp_trg_key as integer,\n\t\tempno as integer,\n\t\tename as string,\n\t\tjob as string,\n\t\tmgr as integer,\n\t\thiredate as timestamp,\n\t\tsal as decimal(7,2),\n\t\tcomm as decimal(7,2),\n\t\tdept as integer,\n\t\tetl_last_updated_date as date,\n\t\tactive_flag as string,\n\t\tstart_date as date,\n\t\tend_date as date\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:(array($target_tab_surrogate_col_name)),\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\teach(match(true()))\n\t)) ~> UpdateNonKeyColumnsSink"
		}
	}
}